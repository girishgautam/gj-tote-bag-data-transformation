name: data-squid-de-tote-bag-data-transformation

on:
  push:
  pull_request:
    branches:
        - main
        - develop

jobs:
  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-region: ${{ secrets.AWS_REGION}}
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Run Checks
        run: make all

      - name: Success Confirmation
        run: echo "All checks passed successfully!"
  

  deploy-lambda:
    name: deploy-lambda
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set up AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION}}
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: build dependencies
        working-directory: terraform
        run: pip install -r ../requirements-lambda.txt -t ../dependencies/python

      - name: copy utils in archive
        working-directory: terraform
        run: | 
             mkdir -p ../utils_layer/python/utils 
             mkdir -p ../packages/extraction_utils
             cp -r ../utils/extraction_utils ../utils_layer/python/utils/
             zip ../packages/extraction_utils/utils.zip -r ../utils_layer/

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Format
        working-directory: terraform
        run: terraform fmt

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve



        